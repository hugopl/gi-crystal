<% render_doc(obj, signal) -%>
struct <%= signal_type %> < GObject::Signal
  def name : String
    @detail ? "<%= signal.name %>::#{@detail}" : "<%= signal.name %>"
  end

  def connect(*, after : Bool = false, &block : Proc(<%= lean_proc_params %>)) : GObject::SignalConnection
    connect(block, after: after)
  end

  def connect(handler : Proc(<%= lean_proc_params %>), *, after : Bool = false) : GObject::SignalConnection
    <% render_box(:lean_signal) %>
    handler_id = LibGObject.g_signal_connect_data(@source, name, handler,
      GICrystal::ClosureDataManager.register(_box), ->GICrystal::ClosureDataManager.deregister, after.to_unsafe)
    GObject::SignalConnection.new(@source, handler_id)
  end

  def connect(handler : Proc(<%= full_proc_params %>), *, after : Bool = false) : GObject::SignalConnection
    <% render_box(:full_signal) %>
    handler_id = LibGObject.g_signal_connect_data(@source, name, handler,
      GICrystal::ClosureDataManager.register(_box), ->GICrystal::ClosureDataManager.deregister, after.to_unsafe)
    GObject::SignalConnection.new(@source, handler_id)
  end

  <% render_emit_method %>
end

def <%= to_call(signal.name) %>_signal
  <%= signal_type %>.new(self)
end
